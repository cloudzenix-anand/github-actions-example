name: project cicd flow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
   sonar-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Analyze with SonarCloud
      run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=cloudzenix-anand_github-actions-example -Dsonar.organization=cloudzenix-anand -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#  sonarcloud:
#    runs-on: ubuntu-latest
#    steps:
#    - name: clone repository
#      uses: actions/checkout@v2
#    - name: Analyse with sonarcloud
#      uses: sonarsource/sonarcloud-github-action@v1.3
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
   build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: |
           mvn -B package --file pom.xml
           mkdir artifacts && cp target/*.jar artifacts
           cd artifacts && ls
    - name: Save artifact 
      uses: actions/upload-artifact@v2
      with:
        name: github-actions-artifact
        path: artifacts
   
      
#  push-docker-image:
  
#    runs-on: ubuntu-latest
#    needs: build
    
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#       java-version: '1.8'
#        distribution: 'adopt'
#        cache: maven
#    - name: Build with Maven
#      run: mvn clean install
#        
#    - name: Build & push Docker image
#   
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: cloudzenix/cz-springboot-welcome
#        tags: today
#        registry: docker.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.DOCKER_USERNAME }} 
#        password: ${{ secrets.DOCKER_PASSWORD }}
    
   # - name: push docker images
   #   run: |
   #        docker pull cloudzenix/cz-springboot-welcome
   #        docker run -p 8080:8080 cloudzenix/cz-springboot-welcome

     
