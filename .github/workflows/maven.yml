name: project cicd flow

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#    runs-on: ubuntu-latest
#    steps:
#    - name: clone repository
#      uses: actions/checkout@v2
#    - name: Analyse with sonarcloud
#      uses: sonarsource/sonarcloud-github-action@v1.3
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
#   build:
  
#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: '1.8'
#        distribution: 'adopt'
#        cache: maven
#    - name: Build with Maven
#      run: |
#           mvn -B package --file pom.xml
#           mkdir artifacts && cp target/*.jar artifacts
#           cd artifacts && ls
#    - name: Save artifact 
#      uses: actions/upload-artifact@v2
#      with:
#        name: github-actions-artifact
#        path: artifacts
#   
      
#  push-docker-image:
  
#    runs-on: ubuntu-latest
#    needs: build
    
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#       java-version: '1.8'
#        distribution: 'adopt'
#        cache: maven
#    - name: Build with Maven
#      run: mvn clean install
#        
#    - name: Build & push Docker image
#   
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: cloudzenix/cz-springboot-welcome
#        tags: today
#        registry: docker.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.DOCKER_USERNAME }} 
#        password: ${{ secrets.DOCKER_PASSWORD }}
    
   # - name: push docker images
   #   run: |
   #        docker pull cloudzenix/cz-springboot-welcome
   #        docker run -p 8080:8080 cloudzenix/cz-springboot-welcome

     
